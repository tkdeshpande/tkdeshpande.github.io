{"pageProps":{"content":"## Introduction\n[Selenium]([#](https://www.selenium.dev/)) has been at the core of Web UI Automation for nearly 2 decades now, however the majority of automation engineers who have been using Selenium since its inception have focused more on Java. Since the advent of [Node.js]([#](https://nodejs.org)) the number of engineers familier with Javascript has grown steadily. Since now the engineers can *\"speak\"* the same language as the browsers, it makes most sense to use the same for automating the same. Although tools like [Puppeteer](#), [Cypress](#) & [Playwright](#) have seen this need and joined the party, the oldie but goodie hasn't lost the race, not yet. **Enter Selenium with JS.**\n\nThe official documentation for Selenium with JS is a good start but since you need to additionally setup the drivers for respective browsers, the code and the steps in the official documentation need some assistance. **Enter this article.**\n\n## System Design\nThere are mainly 3 ways to get started with Selenium for Javascript:\n1. Using the standard Selenium Webdriver.\n2. Using [WebdriverIO](#).\n3. Using [Nightwatch.js](#).\n\nUnfortunately, with WebdriverIO, you have a full configuration to understand and it can take a while until you get a good grasp which will neither be easy not quick.\nNightwatch.js is relatively easier to get started with its user friendly syntax, however due to my love/hate relationship with the [builder pattern](#), I'll be working with the standard Selenium Webdriver package for Javascript.\n\nOfcoarse, I love and use **WebdriverIO ‚ù§Ô∏è** extensively and I'm all better for it, and also would be the same if I spend anytime with Nightwatch.js.\nHowever for this article I want to keep things simple, very very simple. *No fuss, no muss, no wrappers, no trappers* üòâ\n\nNow when you first try to setup Selenium Webdriver from its official documentation, it asks to setup native browser drivers first. But that wouldn't be quick now, would it. üòé\n\nInstead we will be using our trusted `chromedriver` package to get us going blazing fast.\n\n## Installation\nAt the bare minimum, you will need 2 things to be downloaded and installed on your machine:\n1. Node.js. \n2. Google Chrome - stable version\n\n## Setting up the project\n### 1. Create a Node.js project\n- Open an empty directory in your terminal of choice and run the command `npm init --y`.\n\n### 2. Setup Node.js project\n- Install dependencies by running following commands at the root of your project:\n   1. Command for `selenium-webdriver`: `npm i selenium-webdriver`.\n   2. Command for `chromedriver`: `npm i chromedriver --detect_chromedriver_version`. **This step is critical.**\n\n### 3. Writing test cases\n1. Create a new javascript file, eg. `index.js`.\n2. Require/import `chromedriver` at the top of the file.\n3. Require/import `selenium-webdriver`.\n4. Example setup chromedriver as follows:\n\n```javascript\nrequire('chromedriver');\nvar webdriver = require('selenium-webdriver');\nvar driver = new webdriver.Builder()\n  .forBrowser('chrome')\n  .build();\n```\n5. Write test interations as per Selenium [documentation](#)\n\n```javascript\nconst {Builder, By, Key, until} = require('selenium-webdriver');\n\n(async function helloSelenium() {\n    let driver = await new Builder().forBrowser('chrome').build();\n\n    await driver.get('https://www.google.com');\n\n    await driver.getTitle(); // => \"Google\"\n\n    driver.manage().setTimeouts({implicit: 0.5 })\n\n    let searchBox = await driver.findElement(By.name('q'));\n    let searchButton = await driver.findElement(By.name('btnK'));\n\n    await searchBox.sendKeys('Selenium');\n    await searchButton.click();\n\n    await driver.findElement(By.name('q')).getAttribute(\"value\"); // => 'Selenium'\n\n    await driver.quit();\n})();\n```\n\n### 4. Running the test\nNow that you have setup your basic test script you can execute it by runing the following command: `node index.js`\n\nThat's itüëç\n\n### 5. Sample Project\nFinally, feel free refer [this](#) project from my Github which has the code samples mentioned above.","data":{"title":"Getting Started with Selenium & Javascript","date":"2022-07-03","template":"post","draft":false,"slug":"getting-started-with-selenium-javascript","category":"Test Automation","tags":["Selenium"],"description":"Quickest way to gets started with Selenium & Javascript"}},"__N_SSG":true}